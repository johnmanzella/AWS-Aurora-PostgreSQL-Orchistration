#!/bin/bash

LOG="/tmp/awspy.log"
###env >> ${LOG}
HOST="localhost"
PORT="9200"
#DT=`date '+%Y%m%d%H%M%S'`
DT=`date '+%Y-%m-%d-%H-%M-%S'`

echo "Provision ------------------------------------ Started ${DT}"  >> ${LOG}

#
if [[ "${SNAP}" == "" ]] 
then 
   SNAP="delphix-2019-09-17-15-22-21" 		
   #SNAP="delphix-2019-09-20-00-58-49"
fi
if [[ "${VDB_NAME}" == "" ]]
then
   VDB_NAME="my_restore"
fi

#
# Verify Snapshot is Available ...
#
SNAP_DB=`echo "${SNAP}" | awk -F "-" {'print $2'}`
echo "Snapshot DB: ${SNAP_DB}" >> ${LOG}
echo "Verify Snapshot is Available: " >> ${LOG}
#if [[ "${CLUSTER}" == "True" ]]
#then
#   ###delphix-mypsql-2020-03-30-01-21-51
#   SNAP_DB=`echo "${SNAP}" | awk -F "-" {'print $2'}`
#   echo "aws rds describe-db-cluster-snapshots --db-cluster-identifier ${SNAP_DB} --db-cluster-snapshot-identifier ${SNAP}" >> ${LOG}
#   STATUS=`aws rds describe-db-cluster-snapshots --db-cluster-identifier ${SNAP_DB} --db-cluster-snapshot-identifier ${SNAP}`
#else
   echo "aws rds describe-db-snapshots --db-instance-identifier ${SNAP_DB} --db-snapshot-identifier ${SNAP}"
   STATUS=`aws rds describe-db-snapshots --db-instance-identifier ${SNAP_DB} --db-snapshot-identifier ${SNAP}`
#   ###| jq ".DBSnapshots[] | select (.DBSnapshotIdentifier==\"${SNAP}\")"
#fi
#sleep 2
echo "${STATUS}" >> ${LOG}

###echo "${STATUS}" | jq -r  ".DBClusterSnapshots[0].Status" >> ${LOG}
AVAIL=`echo "${STATUS}" | jq -r  ".DBClusterSnapshots[0].Status"`
echo "AVAIL: ${AVAIL}" >> ${LOG}

#if [[ "${AVAIL}" != "available" ]]
#then
#   echo "Error: Snapshot $SNAP for Database $SNAP_DB is not currently available please check AWS, exiting ..." >> ${LOG}
#   die "Error: Snapshot $SNAP for Database $SNAP_DB is not currently available please check AWS, exiting ..."
#fi

#
# Creation Options ...
#
OPTIONS="--engine aurora-postgresql --engine-version 10.serverless_7"

#
# Provision Database by restoring from snapshot ...
# 
if [[ "${CLUSTER}" == "True" ]]
then
   echo "aws rds restore-db-cluster-from-snapshot --db-cluster-identifier ${VDB_NAME} --snapshot-identifier ${SNAP} ${OPTIONS}" >> ${LOG}
   #STATUS=`aws rds restore-db-cluster-from-snapshot --db-cluster-identifier ${VDB_NAME} --snapshot-identifier ${SNAP} ${OPTIONS}`
else
   echo "aws rds restore-db-instance-from-db-snapshot --db-instance-identifier ${VDB_NAME} --db-snapshot-identifier ${SNAP}" >> ${LOG}
   #STATUS=`aws rds restore-db-instance-from-db-snapshot --db-instance-identifier ${VDB_NAME} --db-snapshot-identifier ${SNAP}`
fi
#echo "${STATUS}" >> ${LOG}
	
#
# List all snapshots ...
#
#echo "aws rds describe-db-snapshots --db-instance-identifier delphixdb3" >> ${LOG}
#STATUS=`aws rds describe-db-snapshots --db-instance-identifier delphixdb3`
#echo "${STATUS}" >> ${LOG}
##echo "${STATUS}" | jq -r "." >> ${LOG}

env | sort >> ${LOG}
echo "Provision ------------------------------------ Ended"  >> ${LOG}
echo "Done"
exit

